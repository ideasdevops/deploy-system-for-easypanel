# ===============================================
# TEMPLATE DOCKERFILE PARA EASYPANEL
# ===============================================
# Sistema de Deploy Automático - 
# Basado en la experiencia exitosa de taker_sa_envio_masivo_whatsapp
# 
# USO:
# 1. Copia este archivo como Dockerfile.easypanel-optimized
# 2. Modifica las variables según tu aplicación
# 3. Ejecuta el script de deploy automático
# ===============================================

FROM nginx:alpine

# ===============================================
# CONFIGURACIÓN DE LA APLICACIÓN
# ===============================================
# Modifica estas variables según tu aplicación
ARG APP_NAME="mi-aplicacion"
ARG APP_VERSION="1.0.0"
ARG APP_DESCRIPTION="Aplicación desarrollada con Taker SA Deploy System"
ARG PYTHON_REQUIREMENTS="requests python-dotenv pandas openpyxl schedule psutil"
ARG NODE_REQUIREMENTS=""
ARG PHP_REQUIREMENTS=""

# ===============================================
# INSTALACIÓN DE DEPENDENCIAS DEL SISTEMA
# ===============================================
RUN apk add --no-cache \
    python3 \
    py3-pip \
    curl \
    bash \
    supervisor \
    dumb-init \
    gcc \
    python3-dev \
    musl-dev \
    linux-headers \
    build-base \
    && rm -rf /var/cache/apk/*

# ===============================================
# INSTALACIÓN DE DEPENDENCIAS PYTHON
# ===============================================
# Solo instala si hay requirements de Python
RUN if [ -n "$PYTHON_REQUIREMENTS" ]; then \
        pip3 install --no-cache-dir --break-system-packages $PYTHON_REQUIREMENTS; \
    fi

# ===============================================
# CREACIÓN DE DIRECTORIOS NECESARIOS
# ===============================================
RUN mkdir -p \
    /data/logs/nginx \
    /data/logs/supervisor \
    /data/logs/healthcheck \
    /data/logs/sistema \
    /data/backups \
    /data/data \
    /data/temp \
    /var/cache/nginx \
    /var/run \
    /tmp/nginx \
    /etc/supervisor/conf.d

# ===============================================
# CONFIGURACIÓN DE NGINX
# ===============================================
RUN echo 'server {' > /etc/nginx/conf.d/default.conf && \
    echo '    listen 80 default_server;' >> /etc/nginx/conf.d/default.conf && \
    echo '    listen [::]:80 default_server;' >> /etc/nginx/conf.d/default.conf && \
    echo '    ' >> /etc/nginx/conf.d/default.conf && \
    echo '    root /usr/share/nginx/html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    index index.html index.htm;' >> /etc/nginx/conf.d/default.conf && \
    echo '    ' >> /etc/nginx/conf.d/default.conf && \
    echo '    server_name _;' >> /etc/nginx/conf.d/default.conf && \
    echo '    ' >> /etc/nginx/conf.d/default.conf && \
    echo '    # Configuración de logs' >> /etc/nginx/conf.d/default.conf && \
    echo '    access_log /data/logs/nginx/access.log;' >> /etc/nginx/conf.d/default.conf && \
    echo '    error_log /data/logs/nginx/error.log;' >> /etc/nginx/conf.d/default.conf && \
    echo '    ' >> /etc/nginx/conf.d/default.conf && \
    echo '    # Configuración de archivos estáticos' >> /etc/nginx/conf.d/default.conf && \
    echo '    location / {' >> /etc/nginx/conf.d/default.conf && \
    echo '        try_files $uri $uri/ /index.html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    }' >> /etc/nginx/conf.d/default.conf && \
    echo '    ' >> /etc/nginx/conf.d/default.conf && \
    echo '    # Health check endpoint' >> /etc/nginx/conf.d/default.conf && \
    echo '    location /health {' >> /etc/nginx/conf.d/default.conf && \
    echo '        access_log off;' >> /etc/nginx/conf.d/default.conf && \
    echo '        return 200 "healthy\n";' >> /etc/nginx/conf.d/default.conf && \
    echo '        add_header Content-Type text/plain;' >> /etc/nginx/conf.d/default.conf && \
    echo '    }' >> /etc/nginx/conf.d/default.conf && \
    echo '    ' >> /etc/nginx/conf.d/default.conf && \
    echo '    # API endpoints' >> /etc/nginx/conf.d/default.conf && \
    echo '    location /api/ {' >> /etc/nginx/conf.d/default.conf && \
    echo '        return 200 "API endpoints disponibles\n";' >> /etc/nginx/conf.d/default.conf && \
    echo '        add_header Content-Type text/plain;' >> /etc/nginx/conf.d/default.conf && \
    echo '    }' >> /etc/nginx/conf.d/default.conf && \
    echo '}' >> /etc/nginx/conf.d/default.conf

# ===============================================
# COPIA DE ARCHIVOS DE LA APLICACIÓN
# ===============================================
# Copia el frontend (si existe)
COPY frontend/ /usr/share/nginx/html/

# Copia scripts de la aplicación
COPY scripts/ /data/scripts/

# Copia archivos de configuración
COPY config.json /data/
COPY env.example /data/

# ===============================================
# SCRIPT DE INICIO OPTIMIZADO
# ===============================================
RUN echo '#!/bin/sh' > /start.sh && \
    echo '' >> /start.sh && \
    echo 'echo "🚀 Iniciando '${APP_NAME}'"' >> /start.sh && \
    echo 'echo "========================================="' >> /start.sh && \
    echo 'echo "Versión: '${APP_VERSION}'"' >> /start.sh && \
    echo 'echo "Descripción: '${APP_DESCRIPTION}'"' >> /start.sh && \
    echo '' >> /start.sh && \
    echo '# Crear directorios necesarios' >> /start.sh && \
    echo 'mkdir -p /data/logs/nginx /var/log/nginx /var/cache/nginx /var/run /tmp/nginx' >> /start.sh && \
    echo '' >> /start.sh && \
    echo '# Verificar configuración de nginx' >> /start.sh && \
    echo 'nginx -t' >> /start.sh && \
    echo '' >> /start.sh && \
    echo '# Iniciar nginx' >> /start.sh && \
    echo 'echo "🌐 Iniciando nginx..."' >> /start.sh && \
    echo 'nginx -g "daemon off;"' >> /start.sh

RUN chmod +x /start.sh

# ===============================================
# CONFIGURACIÓN DE SUPERVISOR
# ===============================================
RUN echo '[supervisord]' > /etc/supervisor/conf.d/supervisord.conf && \
    echo 'nodaemon=true' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'user=root' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'logfile=/data/logs/supervisor.log' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'pidfile=/var/run/supervisord.pid' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo '' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo '[program:nginx]' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'command=nginx -g "daemon off;"' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'autostart=true' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'autorestart=true' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'stderr_logfile=/data/logs/nginx/error.log' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'stdout_logfile=/data/logs/nginx/access.log' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'user=root' >> /etc/supervisor/conf.d/supervisord.conf

# ===============================================
# CONFIGURACIÓN DE PUERTOS Y HEALTHCHECK
# ===============================================
EXPOSE 80

# Healthcheck optimizado para EasyPanel
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# ===============================================
# CONFIGURACIÓN DE PERMISOS
# ===============================================
RUN chown -R root:root /data && \
    chmod -R 755 /data && \
    chmod +x /start.sh

# ===============================================
# PUNTO DE ENTRADA
# ===============================================
ENTRYPOINT ["dumb-init", "--"]
CMD ["/start.sh"]
